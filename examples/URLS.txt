Provision
=========
An HTTP request with content-type: application/json
The body must be a JSON with the data for provision
The  object must contain a payload, a priority (H or L) and a list ('queue') of objects with an 'id' property, 
for the target devices
Optionally a callback, an expiration delay ('expirationDelay') or expiration time ('expirationDate') could be set
(Both values in seconds)
By default, the provision service listens at port 3001 at path "/trans"

The response is an object with an 'id' field  with the id of the provisioned transaction
In case of error, the response will be a 400 and an object with a list of error messages in its "error" property

Example: provisioning message for devices Ax and Bx

POST /trans HTTP/1.1
Host: tac01.hi.inet:3001
User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:10.0.2) Gecko/20100101 Firefox/10.0.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: es-es,es;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Type: application/json; charset=UTF-8
Content-Length: 207
Pragma: no-cache
Cache-Control: no-cache

{
 "payload": "{\"spanish\": \"hola\", \"english\": \"hello\", \"to\":\"Mr Lopez\"}",
 "priority":"H",
 "callback":"http://foo.bar",
 "queue":[
    {"id":"Ax"},
    {"id":"Bx"}
   ],
 "expirationDelay": 360
}


HTTP/1.1 200 OK
content-type: application/json
Connection: keep-alive
Transfer-Encoding: chunked

2d
{"id":"d84814f0-6776-11e1-a330-3324e9d100c2"}
0

----

Example of error : priority missing, payload spelling

POST /trans HTTP/1.1
Host: metis:3001
User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:10.0.2) Gecko/20100101 Firefox/10.0.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: es-es,es;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Type: application/json; charset=UTF-8
Content-Length: 192
Pragma: no-cache
Cache-Control: no-cache

{
 "pay_load": "{\"spanish\": \"hola\", \"english\": \"hello\", \"to\":\"Mr Lopez\"}",
 "callback":"http://foo.bar",
 "queue":[
    {"id":"Ax"},
    {"id":"Bx"}
   ],
 "expirationDelay": 360
}

HTTP/1.1 400 Bad Request
content-type: application/json
Connection: keep-alive
Transfer-Encoding: chunked

34
{"error":["undefined priority","undefined payload"]}
0

----

Example: overwriting the payload of an existing transation. The body of the request must be a String.

POST /trans/b43d82d3-1c8a-41f3-848d-04d17b13b73f/payload HTTP/1.1
Host: localhost:3001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1
Accept: application/json
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Type: application/json; charset=UTF-8
Content-Length: 14
Pragma: no-cache
Cache-Control: no-cache

"New message"

HTTP/1.1 200 OK
X-Powered-By: Express
Content-Type: application/json; charset=utf-8
Content-Length: 11
Connection: keep-alive

{"ok":true}

----

Example: overwriting the expirationDate of an existing transation. The date must be an UNIXSTAMP (i.e.: 1343710800)

POST /trans/b43d82d3-1c8a-41f3-848d-04d17b13b73f/payload HTTP/1.1
Host: localhost:3001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1
Accept: application/json
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Type: application/json; charset=UTF-8
Content-Length: 14
Pragma: no-cache
Cache-Control: no-cache

1343710800

HTTP/1.1 200 OK
X-Powered-By: Express
Content-Type: application/json; charset=utf-8
Content-Length: 11
Connection: keep-alive

{"ok":true}


-----------------------------------------------------------

Consumer
========

In order to retrieve the messages  for a device, the id from the device must be append to the URL "queue"
The response is a list with the messages as strings. if there are no messages an empty list is returned ([])
By default, the consumer service listens at port 3001
Two parameters could be append
   "timeout": if the queue is empty , it will wait the value in seconds before returning an empty list ([]) 
              or data arrived during the waiting period as soon as it arrives
   "max" : maximum number of mesages to retrieve. If there are more, they will be in te queue for later requests



POST /queue/Bx/pop HTTP/1.1
Host: localhost:3001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1
Accept: application/json
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Type: application/json; charset=UTF-8
Content-Length: 175
Pragma: no-cache
Cache-Control: no-cache

HTTP/1.1 200 OK
X-Powered-By: Express
Content-Type: application/json; charset=utf-8
Content-Length: 88
Connection: keep-alive

{
  "ok": true,
  "data": [
    "Hello World, im using PopBox",
    "Hello World, im still using PopBox"
  ]
}

---------

GET /queue/<<id>> Shows the transactions in the selected queue, grouped by priority. This doesn`t erase the messages in the queue, just shows them as a list.

GET /queue/Ax HTTP/1.1
Host: localhost:3001
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1
Accept: application/json
Accept-Encoding: gzip, deflate
Connection: keep-alive
Content-Type: application/json

HTTP/1.1 200 OK
X-Powered-By: Express
Content-Type: application/json; charset=utf-8
Content-Length: 347
Connection: keep-alive

{
  "ok": true,
  "host": "localhost:3001",
  "lastPop": "1342776355",
  "size": 2,
  "high": [
    {
      "id": "d34e5493-230c-4763-9fba-ab6e1a849313",
      "href": "http://localhost:3001/trans/d34e5493-230c-4763-9fba-ab6e1a849313?queues=All"
    },
    {
      "id": "41a611d9-38b5-433c-9faf-1c4cc55a72a0",
      "href": "http://localhost:3001/trans/41a611d9-38b5-433c-9faf-1c4cc55a72a0?queues=All"
    }
  ],
  "low": []
}

------------------------------------------------
------------------------------------------------

curl -v --header "Content-type: application/json" -d @provision.json http://localhost:3001/trans
